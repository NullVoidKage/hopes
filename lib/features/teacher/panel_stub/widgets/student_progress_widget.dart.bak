import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import '../../../../core/providers.dart';
import '../../../../core/theme.dart';
import '../../../../data/models/user.dart';
import '../../../../data/models/progress.dart';
import '../../../../data/models/attempt.dart';
import '../../../../data/models/points.dart';
import '../../../../data/models/badge.dart';

class StudentProgressWidget extends ConsumerWidget {
  const StudentProgressWidget({super.key});

  @override
  Widget build(BuildContext context, WidgetRef ref) {
    return DefaultTabController(
      length: 2,
      child: Column(
        children: [
          // Custom Apple-style header
          Container(
            width: double.infinity,
            padding: const EdgeInsets.fromLTRB(20, 16, 20, 20),
            decoration: BoxDecoration(
              color: Colors.white,
              boxShadow: [
                BoxShadow(
                  color: Colors.black.withOpacity(0.03),
                  blurRadius: 8,
                  offset: const Offset(0, 1),
                ),
              ],
            ),
            child: Column(
              children: [
                // Title
                Text(
                  'Student Progress',
                  style: TextStyle(
                    fontSize: 28,
                    fontWeight: FontWeight.w700,
                    color: AppTheme.darkGray,
                    letterSpacing: -0.5,
                  ),
                ),
                const SizedBox(height: 24),
                
                // Custom Apple-style segmented control
                Container(
                  padding: const EdgeInsets.all(4),
                  decoration: BoxDecoration(
                    color: AppTheme.lightGray,
                    borderRadius: BorderRadius.circular(12),
                  ),
                  child: Row(
                    children: [
                      _buildSegmentedButton('Class Overview', 0, context),
                      _buildSegmentedButton('Individual Students', 1, context),
                    ],
                  ),
                ),
              ],
            ),
          ),
          
          // Tab content
          Expanded(
            child: TabBarView(
              children: [
                _ClassOverviewTab(),
                _IndividualStudentsTab(),
              ],
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildSegmentedButton(String text, int index, BuildContext context) {
    return Consumer(
      builder: (context, ref, child) {
        final tabController = DefaultTabController.of(context);
        final isSelected = tabController?.index == index;
        
        return Expanded(
          child: GestureDetector(
            onTap: () => tabController?.animateTo(index),
            child: AnimatedContainer(
              duration: const Duration(milliseconds: 200),
              padding: const EdgeInsets.symmetric(vertical: 12),
              decoration: BoxDecoration(
                color: isSelected ? Colors.white : Colors.transparent,
                borderRadius: BorderRadius.circular(8),
                boxShadow: isSelected ? [
                  BoxShadow(
                    color: Colors.black.withOpacity(0.05),
                    blurRadius: 4,
                    offset: const Offset(0, 1),
                  ),
                ] : null,
              ),
              child: Text(
                text,
                textAlign: TextAlign.center,
                style: TextStyle(
                  fontSize: 15,
                  fontWeight: isSelected ? FontWeight.w600 : FontWeight.w500,
                  color: isSelected ? AppTheme.primaryBlue : AppTheme.neutralGray,
                ),
              ),
            ),
          ),
        );
      },
    );
  }
}

class _ClassOverviewTab extends ConsumerWidget {
  const _ClassOverviewTab();

  @override
  Widget build(BuildContext context, WidgetRef ref) {
    return FutureBuilder<List<User>>(
      future: _getStudents(ref),
      builder: (context, snapshot) {
        if (snapshot.connectionState == ConnectionState.waiting) {
          return const Center(child: CircularProgressIndicator());
        }

        if (snapshot.hasError) {
          return Center(child: Text('Error: ${snapshot.error}'));
        }

        final students = snapshot.data ?? [];
        if (students.isEmpty) {
          return const Center(child: Text('No students found'));
        }

        return ListView(
          padding: const EdgeInsets.all(20),
          children: [
            _buildClassStats(context, ref, students),
            const SizedBox(height: 24),
            _buildSubjectProgress(context, ref),
          ],
        );
      },
    );
  }

  Future<List<User>> _getStudents(WidgetRef ref) async {
    // For demo purposes, create some dummy students
    return [
      const User(
        id: 'student1',
        name: 'Alice Johnson',
        email: 'alice@example.com',
        role: UserRole.student,
        section: '7A',
      ),
      const User(
        id: 'student2',
        name: 'Bob Smith',
        email: 'bob@example.com',
        role: UserRole.student,
        section: '7A',
      ),
      const User(
        id: 'student3',
        name: 'Carol Davis',
        email: 'carol@example.com',
        role: UserRole.student,
        section: '7A',
      ),
    ];
  }

  Widget _buildClassStats(BuildContext context, WidgetRef ref, List<User> students) {
    return Container(
      width: double.infinity,
      padding: const EdgeInsets.all(20),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(20),
        boxShadow: [
          BoxShadow(
            color: Colors.black.withOpacity(0.05),
            blurRadius: 10,
            offset: const Offset(0, 2),
          ),
        ],
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Row(
            children: [
              Container(
                padding: const EdgeInsets.all(12),
                decoration: BoxDecoration(
                  color: AppTheme.primaryBlue.withOpacity(0.1),
                  borderRadius: BorderRadius.circular(12),
                ),
                child: Icon(
                  Icons.analytics,
                  color: AppTheme.primaryBlue,
                  size: 20,
                ),
              ),
              const SizedBox(width: 16),
              Text(
                'Class Statistics',
                style: TextStyle(
                  fontSize: 20,
                  fontWeight: FontWeight.w600,
                  color: AppTheme.darkGray,
                ),
              ),
            ],
          ),
          const SizedBox(height: 20),
          Row(
            children: [
              Expanded(
                child: _buildStatCard(
                  context,
                  'Total Students',
                  students.length.toString(),
                  Icons.people,
                  AppTheme.primaryBlue,
                ),
              ),
              const SizedBox(width: 16),
              Expanded(
                child: _buildStatCard(
                  context,
                  'Active Students',
                  '${(students.length * 0.85).round()}',
                  Icons.person,
                  AppTheme.accentGreen,
                ),
              ),
            ],
          ),
          const SizedBox(height: 20),
          Row(
            children: [
              Expanded(
                child: _buildStatCard(
                  context,
                  'Avg. Score',
                  '78%',
                  Icons.trending_up,
                  AppTheme.accentOrange,
                ),
              ),
              const SizedBox(width: 16),
              Expanded(
                child: _buildStatCard(
                  context,
                  'Lessons Completed',
                  '${(students.length * 12).round()}',
                  Icons.check_circle,
                  AppTheme.accentPurple,
                ),
              ),
            ],
          ),
        ],
      ),
    );
  }

  Widget _buildStatCard(BuildContext context, String title, String value, IconData icon, Color color) {
    return Container(
      padding: const EdgeInsets.all(20),
      decoration: BoxDecoration(
        color: color.withOpacity(0.1),
        borderRadius: BorderRadius.circular(16),
        border: Border.all(
          color: color.withOpacity(0.2),
          width: 1,
        ),
      ),
      child: Column(
        children: [
          Container(
            padding: const EdgeInsets.all(12),
            decoration: BoxDecoration(
              color: color,
              borderRadius: BorderRadius.circular(12),
            ),
            child: Icon(
              icon,
              color: Colors.white,
              size: 20,
            ),
          ),
          const SizedBox(height: 16),
          Text(
            value,
            style: TextStyle(
              fontSize: 24,
              fontWeight: FontWeight.w700,
              color: color,
            ),
          ),
          const SizedBox(height: 8),
          Text(
            title,
            style: TextStyle(
              color: AppTheme.neutralGray,
              fontSize: 14,
              fontWeight: FontWeight.w500,
            ),
            textAlign: TextAlign.center,
          ),
        ],
      ),
    );
  }

  Widget _buildSubjectProgress(BuildContext context, WidgetRef ref) {
    return Container(
      width: double.infinity,
      padding: const EdgeInsets.all(20),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(20),
        boxShadow: [
          BoxShadow(
            color: Colors.black.withOpacity(0.05),
            blurRadius: 10,
            offset: const Offset(0, 2),
          ),
        ],
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Row(
            children: [
              Container(
                padding: const EdgeInsets.all(12),
                decoration: BoxDecoration(
                  color: AppTheme.accentPurple.withOpacity(0.1),
                  borderRadius: BorderRadius.circular(12),
                ),
                child: Icon(
                  Icons.school,
                  color: AppTheme.accentPurple,
                  size: 20,
                ),
              ),
              const SizedBox(width: 16),
              Text(
                'Subject Progress',
                style: TextStyle(
                  fontSize: 20,
                  fontWeight: FontWeight.w600,
                  color: AppTheme.darkGray,
                ),
              ),
            ],
          ),
          const SizedBox(height: 20),
          _buildSubjectProgressBar(context, 'Science', 0.75, AppTheme.accentGreen),
          const SizedBox(height: 12),
          _buildSubjectProgressBar(context, 'Mathematics', 0.60, AppTheme.primaryBlue),
          const SizedBox(height: 12),
          _buildSubjectProgressBar(context, 'English', 0.85, AppTheme.accentOrange),
        ],
      ),
    );
  }

  Widget _buildSubjectProgressBar(BuildContext context, String subject, double progress, Color color) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Row(
          mainAxisAlignment: MainAxisAlignment.spaceBetween,
          children: [
            Text(
              subject,
              style: TextStyle(
                fontSize: 16,
                fontWeight: FontWeight.w600,
                color: AppTheme.darkGray,
              ),
            ),
            Text(
              '${(progress * 100).round()}%',
              style: TextStyle(
                fontSize: 16,
                fontWeight: FontWeight.w600,
                color: color,
              ),
            ),
          ],
        ),
        const SizedBox(height: 12),
        Container(
          height: 8,
          decoration: BoxDecoration(
            color: color.withOpacity(0.1),
            borderRadius: BorderRadius.circular(4),
          ),
          child: FractionallySizedBox(
            alignment: Alignment.centerLeft,
            widthFactor: progress,
            child: Container(
              decoration: BoxDecoration(
                color: color,
                borderRadius: BorderRadius.circular(4),
              ),
            ),
          ),
        ),
      ],
    );
  }
}

class _IndividualStudentsTab extends ConsumerWidget {
  const _IndividualStudentsTab();

  @override
  Widget build(BuildContext context, WidgetRef ref) {
    return FutureBuilder<List<User>>(
      future: _getStudents(ref),
      builder: (context, snapshot) {
        if (snapshot.connectionState == ConnectionState.waiting) {
          return const Center(child: CircularProgressIndicator());
        }

        if (snapshot.hasError) {
          return Center(child: Text('Error: ${snapshot.error}'));
        }

        final students = snapshot.data ?? [];
        if (students.isEmpty) {
          return const Center(child: Text('No students found'));
        }

        return ListView.builder(
          padding: const EdgeInsets.all(20),
          itemCount: students.length,
          itemBuilder: (context, index) {
            return _buildStudentCard(context, ref, students[index]);
          },
        );
      },
    );
  }

  Future<List<User>> _getStudents(WidgetRef ref) async {
    // Same dummy students as above
    return [
      const User(
        id: 'student1',
        name: 'Alice Johnson',
        email: 'alice@example.com',
        role: UserRole.student,
        section: '7A',
      ),
      const User(
        id: 'student2',
        name: 'Bob Smith',
        email: 'bob@example.com',
        role: UserRole.student,
        section: '7A',
      ),
      const User(
        id: 'student3',
        name: 'Carol Davis',
        email: 'carol@example.com',
        role: UserRole.student,
        section: '7A',
      ),
    ];
  }

  Widget _buildStudentCard(BuildContext context, WidgetRef ref, User student) {
    return Container(
      margin: const EdgeInsets.only(bottom: 16),
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(20),
        boxShadow: [
          BoxShadow(
            color: Colors.black.withOpacity(0.05),
            blurRadius: 10,
            offset: const Offset(0, 2),
          ),
        ],
      ),
      child: ExpansionTile(
        title: Row(
          children: [
            Container(
              padding: const EdgeInsets.all(10),
              decoration: BoxDecoration(
                color: AppTheme.primaryBlue.withOpacity(0.1),
                borderRadius: BorderRadius.circular(10),
              ),
              child: Icon(
                Icons.person,
                color: AppTheme.primaryBlue,
                size: 18,
              ),
            ),
            const SizedBox(width: 12),
            Expanded(
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text(
                    student.name,
                    style: TextStyle(
                      fontSize: 16,
                      fontWeight: FontWeight.w600,
                      color: AppTheme.darkGray,
                    ),
                  ),
                  Text(
                    student.email,
                    style: TextStyle(
                      fontSize: 14,
                      color: AppTheme.neutralGray,
                    ),
                  ),
                ],
              ),
            ),
          ],
        ),
        children: [
          Container(
            padding: const EdgeInsets.all(20),
            child: Column(
              children: [
                _buildStudentStats(context, student),
                const SizedBox(height: 20),
                _buildStudentBadges(context, student),
              ],
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildStudentStats(BuildContext context, User student) {
    return Container(
      padding: const EdgeInsets.all(20),
      decoration: BoxDecoration(
        color: AppTheme.lightGray.withOpacity(0.3),
        borderRadius: BorderRadius.circular(16),
      ),
      child: Row(
        children: [
          Expanded(
            child: _buildStudentStat(
              context,
              'Lessons Completed',
              '8/12',
              Icons.book,
              AppTheme.primaryBlue,
            ),
          ),
          Expanded(
            child: _buildStudentStat(
              context,
              'Average Score',
              '82%',
              Icons.trending_up,
              AppTheme.accentGreen,
            ),
          ),
          Expanded(
            child: _buildStudentStat(
              context,
              'Points Earned',
              '450',
              Icons.stars,
              AppTheme.accentOrange,
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildStudentStat(BuildContext context, String label, String value, IconData icon, Color color) {
    return Column(
      children: [
        Container(
          padding: const EdgeInsets.all(8),
          decoration: BoxDecoration(
            color: color.withOpacity(0.1),
            borderRadius: BorderRadius.circular(8),
          ),
          child: Icon(
            icon,
            size: 20,
            color: color,
          ),
        ),
        const SizedBox(height: 12),
        Text(
          value,
          style: TextStyle(
            fontWeight: FontWeight.w700,
            fontSize: 18,
            color: AppTheme.darkGray,
          ),
        ),
        const SizedBox(height: 4),
        Text(
          label,
          style: TextStyle(
            color: AppTheme.neutralGray,
            fontSize: 12,
            fontWeight: FontWeight.w500,
          ),
          textAlign: TextAlign.center,
        ),
      ],
    );
  }

  Widget _buildStudentBadges(BuildContext context, User student) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Row(
          children: [
            Container(
              padding: const EdgeInsets.all(8),
              decoration: BoxDecoration(
                color: AppTheme.accentPurple.withOpacity(0.1),
                borderRadius: BorderRadius.circular(8),
              ),
              child: Icon(
                Icons.emoji_events,
                color: AppTheme.accentPurple,
                size: 16,
              ),
            ),
            const SizedBox(width: 12),
            Text(
              'Badges Earned',
              style: TextStyle(
                fontSize: 16,
                fontWeight: FontWeight.w600,
                color: AppTheme.darkGray,
              ),
            ),
          ],
        ),
        const SizedBox(height: 16),
        Wrap(
          spacing: 12,
          runSpacing: 12,
          children: [
            _buildBadgeChip(context, 'Starter Badge', AppTheme.accentGreen),
            _buildBadgeChip(context, 'Achiever Badge', AppTheme.primaryBlue),
            _buildBadgeChip(context, 'Consistency Badge', AppTheme.accentPurple),
          ],
        ),
      ],
    );
  }

  Widget _buildBadgeChip(BuildContext context, String badgeName, Color color) {
    return Container(
      padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
      decoration: BoxDecoration(
        color: color.withOpacity(0.1),
        borderRadius: BorderRadius.circular(20),
        border: Border.all(
          color: color.withOpacity(0.3),
          width: 1,
        ),
      ),
      child: Row(
        mainAxisSize: MainAxisSize.min,
        children: [
          Icon(
            Icons.emoji_events,
            color: color,
            size: 14,
          ),
          const SizedBox(width: 8),
          Text(
            badgeName,
            style: TextStyle(
              color: color,
              fontSize: 12,
              fontWeight: FontWeight.w600,
            ),
          ),
        ],
      ),
    );
  }
} 